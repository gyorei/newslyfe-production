#!/bin/bash

# News alkalmaz√°s deployment script
# Hetzner Cloud VPS-re val√≥ telep√≠t√©shez

set -e  # Hiba eset√©n le√°ll

echo "üöÄ News alkalmaz√°s telep√≠t√©se Hetzner VPS-re..."

# Sz√≠nek a konzolhoz
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# F√ºggv√©nyek
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# 0. PostgreSQL jelsz√≥ bek√©r√©se
read -sp "Add meg a PostgreSQL jelsz√≥t (nem fog l√°tszani g√©pel√©s k√∂zben): " PG_PASSWORD
echo

# 1. Rendszer friss√≠t√©se
log_info "Rendszer friss√≠t√©se..."
sudo apt update && sudo apt upgrade -y

# 2. Sz√ºks√©ges csomagok telep√≠t√©se
log_info "Sz√ºks√©ges csomagok telep√≠t√©se..."
sudo apt install -y curl wget git build-essential

# 3. Node.js telep√≠t√©se
log_info "Node.js telep√≠t√©se..."
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt install -y nodejs

# 4. PostgreSQL telep√≠t√©se
log_info "PostgreSQL telep√≠t√©se..."
sudo apt install -y postgresql postgresql-contrib

# 5. Nginx telep√≠t√©se
log_info "Nginx telep√≠t√©se..."
sudo apt install -y nginx

# 6. PM2 telep√≠t√©se
log_info "PM2 telep√≠t√©se..."
sudo npm install -g pm2

# 7. Alkalmaz√°s k√∂nyvt√°r l√©trehoz√°sa
log_info "Alkalmaz√°s k√∂nyvt√°r l√©trehoz√°sa..."
sudo mkdir -p /var/www/news
sudo chown $USER:$USER /var/www/news

# 8. Alkalmaz√°s m√°sol√°sa
log_info "Alkalmaz√°s m√°sol√°sa..."
cp -r . /var/www/news/
cd /var/www/news

# 9. .env.production kezel√©se
if [ ! -f /var/www/news/.env.production ]; then
    log_warn ".env.production nem tal√°lhat√≥! L√©trehozok egy alap√©rtelmezett p√©ld√°nyt."
    cat <<EOF > /var/www/news/.env.production
NODE_ENV=production
PORT=3002
DB_USER=newsuser
DB_PASSWORD=$PG_PASSWORD
DB_HOST=localhost
DB_PORT=5432
DB_NAME=newsbase
SESSION_SECRET=$(openssl rand -hex 32)
ALLOWED_ORIGINS=https://sajatdomain.hu
EOF
    log_info ".env.production l√©trehozva. Sz√ºks√©g eset√©n szerkeszd!"
else
    log_info ".env.production m√°r l√©tezik, nem √≠rom fel√ºl."
fi

# 10. F√ºgg≈ës√©gek telep√≠t√©se
log_info "F√ºgg≈ës√©gek telep√≠t√©se..."
npm install

# 11. Frontend build
log_info "Frontend build..."
npm run build

# 12. Backend build
log_info "Backend build..."
npm run build:backend

# 13. Nginx konfigur√°ci√≥ m√°sol√°sa
log_info "Nginx konfigur√°ci√≥ be√°ll√≠t√°sa..."
sudo cp nginx/nginx.conf /etc/nginx/sites-available/news
sudo cp nginx/ssl.conf /etc/nginx/ssl.conf

# 14. Nginx site enged√©lyez√©se
sudo ln -sf /etc/nginx/sites-available/news /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# 15. Nginx konfigur√°ci√≥ tesztel√©se
log_info "Nginx konfigur√°ci√≥ tesztel√©se..."
sudo nginx -t

# 16. Nginx √∫jraind√≠t√°sa
log_info "Nginx √∫jraind√≠t√°sa..."
sudo systemctl restart nginx
sudo systemctl enable nginx

# 17. PostgreSQL be√°ll√≠t√°sa
log_info "PostgreSQL be√°ll√≠t√°sa..."
sudo -u postgres psql -c "CREATE DATABASE newsbase;" || log_warn "Adatb√°zis m√°r l√©tezik."
sudo -u postgres psql -c "DO $$ BEGIN IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'newsuser') THEN CREATE ROLE newsuser LOGIN PASSWORD '$PG_PASSWORD'; END IF; END $$;"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE newsbase TO newsuser;"

# 18. Alkalmaz√°s ind√≠t√°sa PM2-vel
log_info "Alkalmaz√°s ind√≠t√°sa PM2-vel..."
npm run build:all
npm run start:prod
pm2 save
sudo pm2 startup systemd -u $(whoami) --hp $HOME

# 19. T≈±zfal be√°ll√≠t√°sa
log_info "T≈±zfal be√°ll√≠t√°sa..."
sudo ufw allow 22/tcp
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw --force enable

# PostgreSQL port (5432) k√≠v√ºlr≈ël tilt√°sa
log_info "PostgreSQL port (5432) k√≠v√ºlr≈ël tilt√°sa..."
sudo ufw deny 5432/tcp

# DH param√©ter gener√°l√°s (SSL-hez)
if [ ! -f /etc/ssl/certs/dhparam.pem ]; then
  log_info "DH param√©ter gener√°l√°sa (SSL-hez)..."
  sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
else
  log_info "DH param√©ter m√°r l√©tezik, nem gener√°lom √∫jra."
fi

log_info "‚úÖ Telep√≠t√©s k√©sz!"
log_info "üåê Alkalmaz√°s el√©rhet≈ë: https://sajatdomain.hu"
log_info "üìä PM2 st√°tusz: pm2 status"
log_info "üìù Nginx logok: sudo tail -f /var/log/nginx/access.log" 