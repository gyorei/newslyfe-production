// Ez a script lefuttatja az add_verification_columns.sql migr√°ci√≥s SQL f√°jlt a PostgreSQL adatb√°zison.
// A script beolvassa az SQL f√°jlt, csatlakozik a newsbase adatb√°zishoz, v√©grehajtja a migr√°ci√≥t, majd lez√°rja a kapcsolatot.
// Haszn√°lat: node run-migration.js
// Sz√ºks√©ges: pg csomag, helyes adatb√°zis el√©rhet≈ës√©g, add_verification_columns.sql a projekt gy√∂ker√©ben.

// Adatb√°zis migr√°ci√≥ script a verification oszlopok hozz√°ad√°s√°hoz
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// ES modules __dirname megold√°s
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// PostgreSQL kliens import√°l√°sa
import pkg from 'pg';
const { Client } = pkg;

async function runMigration() {
  const client = new Client({
    user: 'postgres',
    host: 'localhost',
    database: 'newsbase',
    password: 'Ps123457sP',
    port: 5432,
  });

  try {
    await client.connect();
    console.log('üîå Adatb√°zis kapcsolat l√©tes√≠tve');

    // SQL script beolvas√°sa
    const sqlScript = fs.readFileSync(path.join(__dirname, 'add_verification_columns.sql'), 'utf8');
    
    console.log('üìù SQL migr√°ci√≥ futtat√°sa...');
    const result = await client.query(sqlScript);
    
    console.log('‚úÖ Migr√°ci√≥ sikeresen lefutott!');
    console.log('üìä Eredm√©ny:', result);

  } catch (error) {
    console.error('üö® Hiba a migr√°ci√≥ sor√°n:', error.message);
  } finally {
    await client.end();
    console.log('üîå Adatb√°zis kapcsolat lez√°rva');
  }
}

runMigration();