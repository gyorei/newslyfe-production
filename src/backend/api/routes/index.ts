/**
 * API Routes - API √∫tvonalak √∂sszegy≈±jt√©se √©s bek√∂t√©se
 *
 * Ez a f√°jl √∂sszekapcsolja az √∂sszes API route-ot √©s el≈ëk√©sz√≠ti a f≈ë Express
 * alkalmaz√°shoz val√≥ csatlakoztat√°sukat. Minden √∫j API modult itt kell
 * regisztr√°lni a megfelel≈ë el≈ëtaggal.
 */

import express from 'express';
import LocalApi from './Local/Local';
import CountryApi from './Country/Country'; // √öj import
import ContinentApi from './Continent/Continent'; // Kontinens API import√°l√°sa
// ========================================
// üé• VIDEO API IMPORT - √öJ VIDE√ì ROUTE!
// ========================================
import VideoApi from './video/videoAggregator/news'; // Video API import√°l√°sa
import VideoCountriesApi from './video/videoCountries/videoCountries'; // √öJ: vide√≥s orsz√°gok route import

// Tov√°bbi route-ok import√°l√°sa a j√∂v≈ëben:
// import SourceApi from './Source/SourceApi';

// F≈ë API router l√©trehoz√°sa
const router = express.Router();

// API verzi√≥ √©s prefix be√°ll√≠t√°sa
const API_VERSION = process.env.API_VERSION || 'v1';

// API eg√©szs√©g√ºgyi v√©gpont
router.get('/health', (req, res) => {
  res.status(200).json({
    status: 'ok',
    timestamp: Date.now(),
    version: API_VERSION,
  });
});

// Ping v√©gpont a kapcsolat ellen≈ërz√©s√©hez
router.get('/ping', (req, res) => {
  res.status(200).json({
    status: 'ok',
    timestamp: Date.now(),
    message: 'API server is running',
  });
});

// API modulok bek√∂t√©se
router.use('/local', LocalApi);
router.use('/country', CountryApi); // √öj modul bek√∂t√©se
router.use('/continent', ContinentApi); // Kontinens API bek√∂t√©se
// ========================================
// üé• VIDEO API BEK√ñT√âS - √öJ VIDE√ì ROUTE!
// ========================================
router.use('/video', VideoApi); // Video API bek√∂t√©se
router.use('/video-countries', VideoCountriesApi); // √öJ: vide√≥s orsz√°gok route bek√∂t√©se


// Tov√°bbi modulok bek√∂t√©se a j√∂v≈ëben:
// router.use('/sources', SourceApi);

// Ideiglenes v√©gpontok a hi√°nyz√≥ funkci√≥khoz (k√©s≈ëbb elt√°vol√≠that√≥k, ha megval√≥sulnak a val√≥di modulok)
router.get('/countries', (req, res) => {
  res.status(200).json({
    message: 'Orsz√°gok list√°ja - hamarosan el√©rhet≈ë',
    example: ['Hungary', 'Germany', 'France', 'United Kingdom', 'Italy', 'Spain'],
  });
});

router.post('/sync', (req, res) => {
  res.status(200).json({
    message: 'Szinkroniz√°ci√≥s v√©gpont - hamarosan el√©rhet≈ë',
    timestamp: Date.now(),
  });
});

// API dokument√°ci√≥s v√©gpont (a j√∂v≈ëben Swagger/OpenAPI integr√°ci√≥val)
router.get('/', (req, res) => {
  res.status(200).json({
    name: 'News API',
    version: API_VERSION,
    endpoints: [
      '/api/health',
      '/api/ping',
      '/api/local/news',
      '/api/local/location',
      '/api/local/preferences',
      '/api/local/has-more-sources',
      '/api/continent/:continent/sources', // √öj kontinens API v√©gpont
      '/api/continent/:continent/news', // √öj kontinens API v√©gpont
      '/api/continent/:continent/countries', // √öj kontinens API v√©gpont
      '/api/countries',
      '/api/country/:country/sources', // Most m√°r a Country modulban
      '/api/country/:country/news', // √öj v√©gpont a Country modulban
      '/api/country/by-letter/:letter', // √öj v√©gpont a Country modulban
      '/api/video/news', // üé• √öj video API v√©gpont
      '/api/video/debug', // üé• √öj video debug v√©gpont
      '/api/video-countries', // üé• Video orsz√°gok v√©gpont
      '/api/sync (POST)',
    ],
    videoEndpoints: {
      news: '/api/video/news?country=Hungary',
      debug: '/api/video/debug',
      countries: '/api/video-countries',
      availableCountries: ['Hungary', 'Germany', 'United Kingdom', 'United States']
    },
    documentation: '/api/docs', // J√∂v≈ëbeli v√©gpont
  });
});

// Router export√°l√°sa
export default router;
